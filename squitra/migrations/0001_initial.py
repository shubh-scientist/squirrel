# Generated by Django 3.2 on 2021-04-11 06:15

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Squirrel',
            fields=[
                ('X', models.DecimalField(blank=True, decimal_places=10, help_text='Longitude coordinate for squirrel sighting point', max_digits=30)),
                ('Y', models.DecimalField(blank=True, decimal_places=10, help_text='Latitude coordinate for squirrel sighting point', max_digits=30)),
                ('Unique_Squirrel_ID', models.CharField(help_text="Identification tag for each squirrel sightings. The tag is comprised of 'Hectare ID' + 'Shift' + 'Date' + 'Hectare Squirrel Number'", max_length=50, primary_key=True, serialize=False)),
                ('Shift', models.CharField(blank=True, choices=[('AM', 'AM'), ('PM', 'PM')], help_text='Value is either "AM" or "PM" to communicate whether or not the sighting session occurred in the morning or late afternoon', max_length=2)),
                ('Date', models.IntegerField(blank=True, help_text='Concatenation of the sighting session day and month', null=True)),
                ('Age', models.CharField(blank=True, choices=[('ADULT', 'ADULT'), ('JUVENILE', 'JUVENILE')], help_text='Value is either "Adult" or "Juvenile"', max_length=20)),
                ('Primary_Fur_Color', models.CharField(blank=True, choices=[('GRAY', 'GRAY'), ('CINAMMON', 'CINNAMON'), ('BLACK', 'BLACK')], help_text='Value is either "Gray," "Cinnamon" or "Black"', max_length=10)),
                ('Location', models.CharField(blank=True, choices=[('GROUND PLANE', 'GROUND PLANE'), ('ABOVE GROUND', 'ABOVE GROUND')], help_text='Value is either "Ground Plane" or "Above Ground"', max_length=30)),
                ('Specific_Location', models.CharField(blank=True, help_text='Additional commentary for squirrel location', max_length=100)),
                ('Running', models.BooleanField(default=False, help_text='Squirrel was seen running; Then True')),
                ('Chasing', models.BooleanField(default=False, help_text='Squirrel was seen chasing another squirrel; Then True')),
                ('Climbing', models.BooleanField(default=False, help_text='Squirrel was seen climbing a tree or other environmental landmark; Then True')),
                ('Eating', models.BooleanField(default=False, help_text='Squirrel was seen eating; Then True')),
                ('Foraging', models.BooleanField(default=False, help_text='Squirrel was seen foraging for food; Then True')),
                ('Other_Activities', models.CharField(blank=True, help_text='Any other activities squirrel was doing?', max_length=200)),
                ('Kuks', models.BooleanField(default=False, help_text='Squirrel was heard kukking, a chirpy vocal communication used for a variety of reasons; if no then False')),
                ('Quaas', models.BooleanField(default=False, help_text='Squirrel was heard quaaing, an elongated vocal communication which can indicate the presence of a ground predator such as a dog; if no then False')),
                ('Moans', models.BooleanField(default=False, help_text='Squirrel was heard moaning, a high-pitched vocal communication which can indicate the presence of an air predator such as a hawk')),
                ('Tail_flags', models.BooleanField(default=False, help_text='Squirrel was seen flagging its tail; if no then False')),
                ('Tail_twitching', models.BooleanField(default=False, help_text='Squirrel was seen twitching its tail; if no then False')),
                ('Approaches', models.BooleanField(default=False, help_text='Squirrel was seen approaching human, seeking food;if no then False')),
                ('Indifferent', models.BooleanField(default=False, help_text='Squirrel was indifferent to human presence; if no then False')),
                ('Runs_from', models.BooleanField(default=False, help_text='Squirrel was seen running from humans, seeing them as a threat; if no then False')),
            ],
        ),
    ]
